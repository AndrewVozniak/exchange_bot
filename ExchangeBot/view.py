from multiprocessing.resource_sharer import stop
from tabnanny import check
import telebot
import random
import time
import handlers.config as cfg
from telebot import *
import handlers.btcPrice as btc
import handlers.validation as valid

token = cfg.BOT_TOKEN
bot = telebot.TeleBot(token)

summary = 0

# * START KEYBOARD
startKeyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
startKeyboard.row("‚¨áÔ∏è –°–ø–∏—Å–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç ‚¨áÔ∏è")
startKeyboard.row("üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π ", "üéÅ –ü—Ä–∞–≤–∏–ª–∞ –æ–±–º–µ–Ω–∞")
startKeyboard.row("üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã", "üìñ –ü–æ–¥–¥–µ—Ä–∂–∫–∞")

# * CANCEL KEYBOARD
cancelKeyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
cancelKeyboard.row("üö´ –û—Ç–º–µ–Ω–∏—Ç—å")



@bot.message_handler(content_types='text')
def startMSG(message):        
    bot.send_message(message.chat.id, reply_markup=startKeyboard, text=f"""‚≠ïÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±–º–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç {cfg.BOT_NAME}!""", parse_mode='html') 

    bot.register_next_step_handler(message, checkCommand, True)

def checkCancel(message):
    if message.text == "üö´ –û—Ç–º–µ–Ω–∏—Ç—å":
        return True
    else: 
        pass

def checkCommand(message, start_msg):
    if message.text == "‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞":

        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, text=f"""*üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...*""", parse_mode="Markdown")
        time.sleep(0.8)
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id + 1, text=f"""*üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...*""", parse_mode="Markdown")       
        time.sleep(0.8)
        bot.delete_message(message.chat.id, message_id=message.message_id + 1)
        bot.send_message(chat_id=message.chat.id, reply_markup=keyboard, text=f"""*‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!*""", parse_mode="Markdown")

    if checkCancel(message):
        startMSG(message)
        return False

    if message.text == "‚¨áÔ∏è –°–ø–∏—Å–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç": # TODO 
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)

        # –¥–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã
        rub = types.InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ —Å—É–º–º—É –≤ —Ä—É–±–ª—è—Ö', callback_data='buyBTC_RUB')
        btc = types.InlineKeyboardButton('–í–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BTC', callback_data='buyBTC_BTC')

        keyboard.add(btc, rub)

        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"‚¨áÔ∏è –ö—É–ø–∏—Ç—å BTC")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: {cfg.BTC_BUY_PRICE} ‚Üí 1 BTC
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {cfg.MIN_SUM_BTC} BTC
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {cfg.MAX_SUM_BTC} BTC""")


    elif message.text == "üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã": # TODO 
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)

        # –¥–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã
        rub = types.InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å –≤ —Ä—É–±–ª—è—Ö', callback_data='sellBTC_RUB')
        btc = types.InlineKeyboardButton('–ü—Ä–æ–¥–∞—Ç—å –≤ BTC', callback_data='sellBTC_BTC')

        keyboard.add(btc, rub)

        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"‚¨ÜÔ∏è –ü—Ä–æ–¥–∞—Ç—å BTC")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞: {cfg.BTC_SELL_PRICE} ‚Üí 1 BTC
üíµ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {cfg.MIN_SUM_BTC} BTC
üíµ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞: {cfg.MAX_SUM_BTC} BTC""")


    elif message.text == "üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π":
        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ–±–º–µ–Ω–æ–≤

[–°–ø–∏—Å–æ–∫ –æ–±–º–µ–Ω–æ–≤ –ø—É—Å—Ç]""")

        # TODO –§–£–ù–ö–¶–Ü–û–ù–ê–õ –í–ò–í–ï–î–ï–ù–ù–Ø –Ü–°–¢–û–†–Ü–á

    elif message.text == "üéÅ –ü—Ä–∞–≤–∏–ª–∞ –æ–±–º–µ–Ω–∞":
        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""{cfg.RULES}""")


    elif message.text == "üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã":         # TODO 
        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""{cfg.DESCRIPTION}""")

    elif message.text == "üìñ –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üìñ –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º, –ª–∏–±–æ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–¥–∞—Ç—å –Ω–∞–º –≤–æ–ø—Ä–æ—Å ‚Äì –Ω–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–∂–µ—Ç –í–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è.

{cfg.SUPPORT} (—Å–≤–æ–±–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º)""")

    elif start_msg == True:
        bot.send_message(message.chat.id, reply_markup=startKeyboard, text=f"""‚≠ïÔ∏è –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π!""")
        bot.register_next_step_handler(message, checkCommand, True)
    else:
        startMSG(message)













def exchangeCryptoStady(message, currency, action, updating):
    if checkCancel(message):
        startMSG(message)
        return False

    if action == "BUY":
        if currency == "BTC":
            if valid.checkSum(cfg.MIN_SUM_BTC, cfg.MAX_SUM_BTC, message.text) or updating:
                bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üí¨ –£–∫–∞–∂–∏—Ç–µ –í–∞—à –∞–¥—Ä–µ—Å BTC –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è""")
                bot.register_next_step_handler(message, checkPayInfoStady, message.text, "BTC", "BUY")

            else:
                bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ {cfg.MIN_SUM_BTC} btc
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ {cfg.MAX_SUM_BTC} btc""")
                bot.register_next_step_handler(message, exchangeCryptoStady, currency, "BUY", False)


        if currency == "RUB":
            if valid.checkSum(cfg.MIN_SUM_RUB, cfg.MAX_SUM_RUB, message.text) or updating:
                bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üí¨ –£–∫–∞–∂–∏—Ç–µ –í–∞—à –∞–¥—Ä–µ—Å BTC –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è""")
                bot.register_next_step_handler(message, checkPayInfoStady, message.text, "RUB", "BUY")

            else:
                bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ {cfg.MIN_SUM_RUB} —Ä—É–±
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ {cfg.MAX_SUM_RUB} —Ä—É–±""")
                bot.register_next_step_handler(message, exchangeCryptoStady, currency, "BUY", False)
    



    if action == "SELL":
        if currency == "BTC":
            if valid.checkSum(cfg.MIN_SUM_BTC, cfg.MAX_SUM_BTC, message.text) or updating:
                bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üí¨ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è""")
                bot.register_next_step_handler(message, checkPayInfoStady, message.text, "BTC", "SELL")

            else:
                bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ {cfg.MIN_SUM_BTC} btc
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ {cfg.MAX_SUM_BTC} btc""")
                bot.register_next_step_handler(message, exchangeCryptoStady, currency, "SELL", False)


        if currency == "RUB":
            if valid.checkSum(cfg.MIN_SUM_RUB, cfg.MAX_SUM_RUB, message.text) or updating:
                bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üí¨ –£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è""")
                bot.register_next_step_handler(message, checkPayInfoStady, message.text, "RUB", "SELL")

            else:
                bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ {cfg.MIN_SUM_RUB} —Ä—É–±
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –¥–ª—è –æ–±–º–µ–Ω–∞ {cfg.MAX_SUM_RUB} —Ä—É–±""")
                bot.register_next_step_handler(message, exchangeCryptoStady, currency, "SELL", False)








def checkPayInfoStady(message, summ, currency, action):
    print("checkPayInfoStady")
    if checkCancel(message):
        startMSG(message)
        return False

    global summary
    # –≤ –¥—É—à–µ –Ω–µ –µ–±—É –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç ( —Ä–∞–∑–±–∏—Ä–∞–π—Å—è —Å–∞–º )
    try:
        if summary == 0:
            summary = float(summ)
    except:
        exchangeCryptoStady(message, currency, "BUY", True)
        

    if action == "BUY":
        print(currency)
        if valid.validateBTC(message.text):
            if currency == "RUB":
                print(f"{currency} next - pay stady")
                payStady(message, summary, "RUB", "BUY")
            if currency == "BTC":
                print(f"{currency} next - pay stady")
                payStady(message, summary, "BTC", "BUY")
        
        else:            
            bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""‚ö†Ô∏è –¢–∞–∫–æ–≥–æ BTC –∫–æ—à–µ–ª—å–∫–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!""")
            exchangeCryptoStady(message, currency, "BUY", True)

    if action == "SELL":
        print(currency)
        if valid.validateCard(message.text):
            if currency == "RUB":
                print(f"{currency} next - pay stady")
                payStady(message, summary, "RUB", "SELL")
            if currency == "BTC":
                print(f"{currency} next - pay stady")
                payStady(message, summary, "BTC", "SELL")

        else:
            bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã!""")
            exchangeCryptoStady(message, currency, "SELL", True)








def payStady(message, summ, currency, action):
    if checkCancel(message):
        startMSG(message)
        return False

    global summary
    #! BUY BTC
    if valid.validateBTC(message.text) and currency == "BTC" and action == "BUY":        
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚úÖ –ó–∞—è–≤–∫–∞ {str(random.randrange(100, 40000)).zfill(6)} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

üíµ –°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {summ} Btc
üè¶ –°—á—ë—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∏—è:
{message.text}

‚è∫Ô∏è –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:  üü° –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã

üïì –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É:  30 –º–∏–Ω—É—Ç
üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: `{btc.buyBTC_inBTC(summ)}` –†—É–±
üè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: `{cfg.CARD_NUMBER}`""", parse_mode="Markdown")


    elif valid.validateCard(message.text) and currency == "RUB" and action == "BUY":        
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚úÖ –ó–∞—è–≤–∫–∞ {str(random.randrange(100, 40000)).zfill(6)} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

üíµ –°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {btc.buyBTC_inRUB(summ)} Btc
üè¶ –°—á—ë—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∏—è:
{message.text}

‚è∫Ô∏è –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:  üü° –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã

üïì –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É:  30 –º–∏–Ω—É—Ç
üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: `{summ}` –†—É–±
üè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: `{cfg.CARD_NUMBER}`""", parse_mode="Markdown")

    #! SELL BTC
    elif valid.validateBTC(message.text) and currency == "BTC" and action == "SELL":        
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚úÖ –ó–∞—è–≤–∫–∞ {str(random.randrange(100, 40000)).zfill(6)} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

üíµ –°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {summ} Btc
üè¶ –°—á—ë—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∏—è:
{message.text}

‚è∫Ô∏è –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:  üü° –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã

üïì –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É:  30 –º–∏–Ω—É—Ç
üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {btc.buyBTC_inBTC(summ)} –†—É–±
üè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: {cfg.CARD_NUMBER}""")


    elif valid.validateCard(message.text) and currency == "RUB" and action == "SELL":        
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚úÖ –ó–∞—è–≤–∫–∞ {str(random.randrange(100, 40000)).zfill(6)} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

üíµ –°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {summ} Btc
üè¶ –°—á—ë—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∏—è:
{message.text}

‚è∫Ô∏è –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:  üü° –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã

üïì –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É:  30 –º–∏–Ω—É—Ç
üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {btc.buyBTC_inBTC(summ)} –†—É–±
üè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: {cfg.CARD_NUMBER}""")


    else:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚úÖ –ó–∞—è–≤–∫–∞ {str(random.randrange(100, 40000)).zfill(6)} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

üíµ –°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {summ} Btc
üè¶ –°—á—ë—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∏—è:
{message.text}

‚è∫Ô∏è –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:  üü° –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã

üïì –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É:  30 –º–∏–Ω—É—Ç
üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {btc.buyBTC_inBTC(summ)} –†—É–±
üè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: {cfg.CARD_NUMBER}""")

        print(valid.validateCard(message.text))
        print(currency)
        print(action)

    summary = 0
    bot.register_next_step_handler(message, checkPayment)




def checkPayment(message):
    if checkCancel(message):
        startMSG(message)

        return False
    if message.text == "‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞":
        print("F")
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, text=f"""*üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...*""", parse_mode="Markdown")
        time.sleep(0.8)
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id + 1, text=f"""*üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...*""", parse_mode="Markdown")       
        time.sleep(0.8)
        bot.delete_message(message.chat.id, message_id=message.message_id + 1)
        bot.send_message(chat_id=message.chat.id, reply_markup=keyboard, text=f"""*‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!*""", parse_mode="Markdown")
        bot.register_next_step_handler(message, checkPayment)

    else:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚≠ïÔ∏è –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π!""") 
        bot.register_next_step_handler(message, checkPayment)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == ('buyBTC_BTC'):
            bot.send_message(call.message.chat.id, reply_markup=cancelKeyboard, text=f"""–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞ {cfg.SELL_PRICE} –≤ —Ä—É–±–ª—è—Ö. 

–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {cfg.MIN_SUM_BTC} btc.
–ú–∞–∫—Å–∏–º—É–º {cfg.MAX_SUM_BTC} btc.

üí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BTC –¥–ª—è –æ–±–º–µ–Ω–∞""")
            bot.register_next_step_handler(call.message, exchangeCryptoStady, "BTC", "BUY", False)

        if call.data == ('buyBTC_RUB'):
            bot.send_message(call.message.chat.id, reply_markup=cancelKeyboard, text=f"""–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞ {cfg.SELL_PRICE} –≤ —Ä—É–±–ª—è—Ö. 

–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {cfg.MIN_SUM_RUB} —Ä—É–±–ª–µ–π.
–ú–∞–∫—Å–∏–º—É–º {cfg.MAX_SUM_RUB} —Ä—É–±–ª–µ–π.

üí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –¥–ª—è –æ–±–º–µ–Ω–∞""")
            bot.register_next_step_handler(call.message, exchangeCryptoStady, "RUB", "BUY", False)

        if call.data == ('sellBTC_BTC'):
            bot.send_message(call.message.chat.id, reply_markup=cancelKeyboard, text=f"""–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞ {cfg.SELL_PRICE} –≤ —Ä—É–±–ª—è—Ö. 

–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {cfg.MIN_SUM_BTC} btc.
–ú–∞–∫—Å–∏–º—É–º {cfg.MAX_SUM_BTC} btc.

üí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ BTC –¥–ª—è –æ–±–º–µ–Ω–∞""")
            bot.register_next_step_handler(call.message, exchangeCryptoStady, "BTC", "SELL", False)

        if call.data == ('sellBTC_RUB'):
            bot.send_message(call.message.chat.id, reply_markup=cancelKeyboard, text=f"""–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞ {cfg.SELL_PRICE} –≤ —Ä—É–±–ª—è—Ö. 

–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {cfg.MIN_SUM_RUB} —Ä—É–±–ª–µ–π.
–ú–∞–∫—Å–∏–º—É–º {cfg.MAX_SUM_RUB} —Ä—É–±–ª–µ–π.

üí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä—É–±–ª–µ–π –¥–ª—è –æ–±–º–µ–Ω–∞""")
            bot.register_next_step_handler(call.message, exchangeCryptoStady, "RUB", "SELL", False)

if __name__ == '__main__':
    bot.infinity_polling()