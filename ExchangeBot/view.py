from multiprocessing.resource_sharer import stop
from tabnanny import check
import telebot
import random
import time
import handlers.config as cfg
from telebot import *
import handlers.database as db
import handlers.validation as valid

token = cfg.BOT_TOKEN
bot = telebot.TeleBot(token)

database = db.connect("localhost","root", "root", "exchange_bot")
cursor = database.cursor()

# * START KEYBOARD
startKeyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
startKeyboard.row("‚¨áÔ∏è –°–ø–∏—Å–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç ‚¨áÔ∏è")
startKeyboard.row("üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π ", "üéÅ –ü—Ä–∞–≤–∏–ª–∞ –æ–±–º–µ–Ω–∞")
startKeyboard.row("üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã", "üìñ –ü–æ–¥–¥–µ—Ä–∂–∫–∞")

# * CANCEL KEYBOARD
cancelKeyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
cancelKeyboard.row("üö´ –û—Ç–º–µ–Ω–∏—Ç—å")



@bot.message_handler(content_types='text')
def startMSG(message):        
    bot.send_message(message.chat.id, reply_markup=startKeyboard, text=f"""‚≠ïÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ–±–º–µ–Ω–Ω—ã–π –ø—É–Ω–∫—Ç {cfg.BOT_NAME}!""", parse_mode='html') 

    bot.register_next_step_handler(message, checkCommand, True)

def checkCancel(message):
    if message.text == "üö´ –û—Ç–º–µ–Ω–∏—Ç—å":
        return True
    else: 
        pass

def checkCommand(message, start_msg):
    if message.text == "‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞":

        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, text=f"""*üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...*""", parse_mode="Markdown")
        time.sleep(0.8)
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id + 1, text=f"""*üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...*""", parse_mode="Markdown")       
        time.sleep(0.8)
        bot.delete_message(message.chat.id, message_id=message.message_id + 1)
        bot.send_message(chat_id=message.chat.id, reply_markup=keyboard, text=f"""*‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!*""", parse_mode="Markdown")

    if checkCancel(message):
        startMSG(message)
        return False

    if message.text == "‚¨áÔ∏è –°–ø–∏—Å–æ–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç ‚¨áÔ∏è": # TODO 
        keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)

        # –¥–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã
        cryptos = [types.InlineKeyboardButton(i, callback_data=f"coin-{i}") for i in cfg.CRYPTO_LIST.keys()]

        keyboard.add(*cryptos)

        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"‚¨áÔ∏è –í—ã–±—Ä–∞—Ç—å –≤–∞–ª—é—Ç—É")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã

BTC -> {cfg.BTC_PRICE}
XRP -> {cfg.XRP_PRICE}
TRX -> {cfg.TRX_PRICE}
APT -> {cfg.APT_PRICE}
ETH -> {cfg.ETH_PRICE}
MATIC -> {cfg.MATIC_PRICE}
DOGE -> {cfg.DOGE_PRICE}
LTC -> {cfg.LTC_PRICE}
TWT -> {cfg.TWT_PRICE}
BNB -> {cfg.BNB_PRICE}


üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞ –≤ USD üîÑ
""")


    elif message.text == "üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã": 
        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üí∞ –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ü–µ–Ω—ã

BTC -> {cfg.BTC_PRICE}
XRP -> {cfg.XRP_PRICE}
TRX -> {cfg.TRX_PRICE}
APT -> {cfg.APT_PRICE}
ETH -> {cfg.ETH_PRICE}
MATIC -> {cfg.MATIC_PRICE}
DOGE -> {cfg.DOGE_PRICE}
LTC -> {cfg.LTC_PRICE}
TWT -> {cfg.TWT_PRICE}
BNB -> {cfg.BNB_PRICE}


üîÑ –ö—É—Ä—Å –æ–±–º–µ–Ω–∞ –≤ USD üîÑ
""")


    elif message.text == "üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π":
        cursor.execute(f"SELECT * FROM operations WHERE user_id = {message.chat.id}")

        operations = cursor.fetchall()

        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üîÑ –ò—Å—Ç–æ—Ä–∏—è –æ–±–º–µ–Ω–æ–≤""")
        for x in operations:
            bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""`–ù–æ–º–µ—Ä:` {x[0]};
`–¢–∏–ø:` {x[1]};
`–ú–æ–Ω–µ—Ç–∞:` {x[2]};
`–°—Ä–µ–¥—Å—Ç–≤–æ –≤—ã–≤–æ–¥–∞:` {x[3]};
`–°—É–º–º–∞:` {x[4]} USD;
""", parse_mode="Markdown")


        

    elif message.text == "üéÅ –ü—Ä–∞–≤–∏–ª–∞ –æ–±–º–µ–Ω–∞":
        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""{cfg.RULES}""")

    elif message.text == "üìñ –ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üìñ –ü–æ–¥–¥–µ—Ä–∂–∫–∞

–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –∫–∞–∫–∏–µ-–ª–∏–±–æ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–æ—Ç–æ–º, –ª–∏–±–æ –í—ã —Ö–æ—Ç–µ–ª–∏ –±—ã –∑–∞–¥–∞—Ç—å –Ω–∞–º –≤–æ–ø—Ä–æ—Å ‚Äì –Ω–∞—à –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å —Ä–∞–¥–æ—Å—Ç—å—é –ø–æ–º–æ–∂–µ—Ç –í–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è.

{cfg.SUPPORT} (—Å–≤–æ–±–æ–¥–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –ø–æ –≤—ã—Ö–æ–¥–Ω—ã–º)""")

    elif start_msg == True:
        bot.send_message(message.chat.id, reply_markup=startKeyboard, text=f"""‚≠ïÔ∏è –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π!""")
        bot.register_next_step_handler(message, checkCommand, True)
    else:
        startMSG(message)





@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    global cancelKeyboard
    keyboard = telebot.types.InlineKeyboardMarkup(row_width=1)


    if call.data.startswith('coin-'):
        crypto = call.data.partition('-')[2]
        # –¥–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä –¥–µ–π—Å—Ç–≤–∏—è
        buy = types.InlineKeyboardButton(f'–ö—É–ø–∏—Ç—å {crypto}', callback_data=f'buy-{crypto}')
        sell = types.InlineKeyboardButton(f'–ü—Ä–æ–¥–∞—Ç—å {crypto}', callback_data=f'sell-{crypto}')
        
        keyboard.add(buy, sell)

        bot.send_message(call.message.chat.id, reply_markup=keyboard, text="üí¨ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")

    if call.data.startswith('buy-'):
        crypto = call.data.partition('-')[2]

        bot.send_message(call.message.chat.id, reply_markup=cancelKeyboard, text="üí¨ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–≥–æ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞:")
        bot.register_next_step_handler(call.message, getAmount, crypto, "BUY")

    if call.data.startswith('sell-'):
        crypto = call.data.partition('-')[2]

        bot.send_message(call.message.chat.id, reply_markup=cancelKeyboard, text="üí¨ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π –∫–∞—Ä—Ç—ã:")
        bot.register_next_step_handler(call.message, getAmount, crypto, "SELL")


def getAmount(message, crypto, action):
    wallet = message.text

    bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""üí¨ –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ {crypto}""")

    if action == "BUY":
        bot.register_next_step_handler(message, checkPayInfo, crypto, "BUY", wallet)
        
    elif action == "SELL":
        bot.register_next_step_handler(message, checkPayInfo, crypto, "SELL", wallet)


def checkPayInfo(message, crypto, action, wallet):
    global cursor

    amount = float(message.text)

    if valid.validateBTC(wallet) or valid.validateCard(wallet):
        payStady(message, amount, crypto, action, wallet)
    else:
        bot.send_message(message.chat.id, reply_markup=cancelKeyboard, text=f"""‚ö†Ô∏è –¢–∞–∫–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ / –∫–∞—Ä—Ç—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞—è–≤–∫—É –ø–æ –Ω–æ–≤–æ–π.""")
        startMSG(message)
        return False




def payStady(message, amount, crypto, action, wallet):
    if checkCancel(message):
        startMSG(message)
        return False

    
            
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

    # ? –ü–û–õ–£–ß–ê–ï–ú –ö–û–ú–ò–°–ò–Æ –ö–†–ò–ü–¢–´ –ò –î–û–ë–ê–í–õ–Ø–ï–ú –ï–ï –ö AMOUNT
    db.execute(cursor, f"SELECT commission FROM coins WHERE name = '{crypto}'")
    commission = cursor.fetchone()
    
    paymentSum = cfg.CRYPTO_LIST[crypto]*amount

    if action == "SELL":
        price = amount
        if(commission[0] > 1):
            price = amount*commission[0]

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚úÖ –ó–∞—è–≤–∫–∞ {str(random.randrange(100, 40000)).zfill(6)} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

    üíµ –°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {paymentSum} USD
    üè¶ –°—á—ë—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∏—è:
    {wallet}

    ‚è∫Ô∏è –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:  üü° –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã

    üïì –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É:  30 –º–∏–Ω—É—Ç
    üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: {price} {crypto}
    üè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: `{cfg.CARD_NUMBER}`""", parse_mode="Markdown")
        


    elif action == "BUY":
        price = paymentSum
        if(commission[0] > 1):
            price = paymentSum*commission[0]
            
        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚úÖ –ó–∞—è–≤–∫–∞ {str(random.randrange(100, 40000)).zfill(6)} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!

    üíµ –°—É–º–º–∞ –∫ –ø–æ–ª—É—á–µ–Ω–∏—é: {amount} {crypto}
    üè¶ –°—á—ë—Ç –∑–∞—á–∏—Å–ª–µ–Ω–∏—è:
    {wallet}

    ‚è∫Ô∏è –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏:  üü° –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã

    üïì –í—Ä–µ–º—è –Ω–∞ –æ–ø–ª–∞—Ç—É:  30 –º–∏–Ω—É—Ç
    üíµ –°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: `{price}` USD
    üè¶ –†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã: `{cfg.CARD_NUMBER}`""", parse_mode="Markdown")

    bot.register_next_step_handler(message, checkPayment, action, crypto, wallet, price, message.chat.id)




def checkPayment(message, type, coin, wallet, price, user_id):
    global cursor

    if checkCancel(message):
        startMSG(message)
        return False

    if message.text == "‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞":
        #? –°–û–•–†–ê–ù–Ø–ï–ú –¢–†–ê–ù–ó–ê–ö–¶–ò–Æ
        sql = f"INSERT INTO `operations` (`id`, `type`, `coin`, `wallet_number`, `amount`, `user_id`) VALUES (NULL, '{type}', '{coin}', '{wallet}', '{price}', '{user_id}');"
        cursor.execute(sql)

        database.commit()
    


        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, text=f"""*üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...*""", parse_mode="Markdown")
        time.sleep(0.8)
        bot.edit_message_text(chat_id=message.chat.id, message_id=message.message_id + 1, text=f"""*üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã...*""", parse_mode="Markdown")       
        time.sleep(0.8)
        bot.delete_message(message.chat.id, message_id=message.message_id + 1)
        bot.send_message(chat_id=message.chat.id, reply_markup=keyboard, text=f"""*‚ùå –û–ø–ª–∞—Ç–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç!*""", parse_mode="Markdown")
        bot.register_next_step_handler(message, checkPayment, type, coin, wallet, price, user_id)

    else:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        keyboard.row("‚úÖ –û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞","üö´ –û—Ç–º–µ–Ω–∏—Ç—å")

        bot.send_message(message.chat.id, reply_markup=keyboard, text=f"""‚≠ïÔ∏è –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π!""") 
        bot.register_next_step_handler(message, checkPayment, type, coin, wallet, price, user_id)



if __name__ == '__main__':
    bot.infinity_polling()